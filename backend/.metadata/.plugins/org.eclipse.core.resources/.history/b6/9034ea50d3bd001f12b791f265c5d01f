package com.example.userservice.security;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

import com.example.userservice.dto.response.UserResponse;
import com.example.userservice.service.UserService;

@Component("userSecurity") // new code: @PreAuthorizeで使用するSpELでこのIDを用いる
public class UserSecurity {

    private final UserService userService; // コンストラクタインジェクションに変更

    public UserSecurity(UserService userService) { // new code: コンストラクタインジェクション
        this.userService = userService;
    }

    public boolean isOwner(Authentication authentication, Long userId) {
        if (authentication == null || !authentication.isAuthenticated()) {
            return false;
        }

        String currentUsername = authentication.getName();

        UserResponse user;
        try {
            user = userService.getUserById(userId);
        } catch (Exception e) {
            // ユーザーが存在しない場合は所有者判定不可
            return false;
        }

        return user.getUsername().equals(currentUsername);
    }
}
